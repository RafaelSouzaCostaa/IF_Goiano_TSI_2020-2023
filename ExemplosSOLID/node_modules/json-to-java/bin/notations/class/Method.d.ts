import { JsonArray, JsonObject } from '../../utils/json';
import JavaAnnotation from '../Annotation';
import JavaBaseWithName from '../BaseWithName';
import { JavaAccessModifier, JavaNonAccessModifier } from '../basic/Modifier';
import { JavaStatementArray } from '../basic/Statement';
import JavaVariableDifinition from '../basic/VariableDifinition';
export declare function parseMethods(emitter: any, fieldName: string, receiver: JavaClassMethod[], methodJson: JsonArray, currentIndent: number): void;
export default class JavaClassMethod extends JavaBaseWithName {
    readonly annotations: JavaAnnotation[];
    readonly accessModifier: JavaAccessModifier;
    readonly nonAccessModifiers: JavaNonAccessModifier[];
    readonly type: string | 'void';
    readonly arguments: JavaVariableDifinition[];
    readonly statements: JavaStatementArray;
    constructor(currentIndent: number, json: JsonObject);
    toString(): string;
}
