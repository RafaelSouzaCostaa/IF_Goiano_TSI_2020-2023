import { JsonArray, JsonObject } from '../utils/json';
import JavaAnnotation from './Annotation';
import JavaBaseWithName from './BaseWithName';
import { JavaAccessModifier, JavaNonAccessModifier } from './basic/Modifier';
import JavaClassAttribute from './class/Attribute';
import JavaClassConstructor from './class/Constructor';
import JavaClassMethod from './class/Method';
export declare function parseClasses(emitter: any, fieldName: string, receiver: JavaClass[], classJson: JsonArray, currentIndent: number): void;
export default class JavaClass extends JavaBaseWithName {
    readonly annotations: JavaAnnotation[];
    readonly accessModifier: JavaAccessModifier;
    readonly nonAccessModifiers: JavaNonAccessModifier[];
    readonly extends: string | null;
    readonly implements: string[];
    readonly attributes: JavaClassAttribute[];
    readonly constructors: JavaClassConstructor[];
    readonly methods: JavaClassMethod[];
    readonly classes: JavaClass[];
    constructor(currentIndent: number, json: JsonObject);
    toString(): string;
}
