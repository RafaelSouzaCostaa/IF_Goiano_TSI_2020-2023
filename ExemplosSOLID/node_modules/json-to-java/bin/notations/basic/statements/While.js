"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const J2JError_1 = tslib_1.__importDefault(require("../../../utils/J2JError"));
const json_1 = require("../../../utils/json");
const QuickConsole_1 = tslib_1.__importDefault(require("../../../utils/QuickConsole"));
const Statement_1 = require("../Statement");
const Base_1 = tslib_1.__importDefault(require("./Base"));
class JavaStatementWhile extends Base_1.default {
    constructor(currentIndent, json) {
        super(currentIndent);
        this.statements = [];
        this.nameWhenAsEmitter = 'While Statement';
        if ('condition' in json) {
            if (typeof json.condition === 'string') {
                this.condition = json.condition;
            }
            else {
                throw J2JError_1.default.typeError(this, 'condition', String);
            }
        }
        else {
            throw J2JError_1.default.fieldNotDefined(this, 'condition');
        }
        if ('statements' in json) {
            if (json_1.JsonUtil.isJsonArray(json.statements)) {
                Statement_1.parseJavaStatements(this.statements, json.statements, currentIndent + 1);
            }
            else {
                QuickConsole_1.default.warnIgnoreField('while', 'statements', Array);
            }
        }
    }
    toJavaStatement() {
        return [
            `while (${this.condition}) {`,
            this.statements,
            '}',
        ];
    }
}
exports.default = JavaStatementWhile;
